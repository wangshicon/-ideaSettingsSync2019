<application>
  <component name="AppStorage">
    <histories>
      <item value="parser features" />
      <item value="This method deserializes the specified Json into an object of the specified class. It is not * suitable to use if the specified class is a generic type since it will not have the generic * type information because of the Type Erasure feature of Java. Therefore, this method should not * be used if the desired type is a generic type. Note that this method works fine if the any of * the fields of the specified object are generics, just the object itself should not be a * generic type. For the cases when the object is of generic type, invoke * {@link #parseObject(String, Type, Feature[])}. If you have the Json in a {@link InputStream} instead of * a String, use {@link #parseObject(InputStream, Type, Feature[])} instead." />
      <item value="转换到" />
      <item value="转换" />
      <item value="满足" />
      <item value="达标" />
      <item value="exception unwrapping private key - java.security.InvalidKeyException: Illegal key size" />
      <item value="AY" />
      <item value="Map&lt;String, String&gt; params = SignUtils.paraFilter(map)" />
      <item value="Lord" />
      <item value="idleTimeout has been set but has no effect because the pool is operating as a fixed size pool" />
      <item value="No operations allowed after connection closed" />
      <item value="JD ASYNC AREA MARK" />
      <item value="Current Operator" />
      <item value="addition" />
      <item value="lock Time" />
      <item value="default" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="11" />
        <entry key="ENGLISH" value="12" />
        <entry key="FILIPINO" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="overrideFont" value="true" />
    <option name="primaryFontFamily" value="Microsoft YaHei UI" />
  </component>
</application>